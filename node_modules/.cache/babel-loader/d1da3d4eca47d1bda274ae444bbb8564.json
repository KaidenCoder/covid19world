{"ast":null,"code":"const url = 'https://api.covid19api.com/summary';\nexport const fetchData = async () => {\n  try {\n    const data = await (await fetch(url)).json(); // console.log(data)\n\n    const modifiedData = {\n      newconfirmed: data.Global.NewConfirmed,\n      totalconfirmed: data.Global.TotalConfirmed,\n      newdeaths: data.Global.NewDeaths,\n      totaldeaths: data.Global.TotalDeaths,\n      newrecovered: data.Global.NewRecovered,\n      totalrecovered: data.Global.TotalRecovered,\n      dateupdate: data.Date,\n      country: [...data.Countries]\n    };\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchDataCountries = async () => {\n  try {\n    const data = await (await fetch(url)).json(); // console.log(data)\n\n    const modifiedData = {\n      sortConfirmed: [...data.Countries].sort((a, b) => b.TotalConfirmed - a.TotalConfirmed),\n      sortRecovered: [...data.Countries].sort((a, b) => b.TotalRecovered - a.TotalRecovered),\n      sortDeaths: [...data.Countries].sort((a, b) => b.TotalDeaths - a.TotalDeaths)\n    };\n    console.log(modifiedData);\n    const modifiedConfirmedData = [...data.Countries].sort((a, b) => b.TotalConfirmed - a.TotalConfirmed);\n    const modifiedRecoveredData = [...data.Countries].sort((a, b) => b.TotalRecovered - a.TotalRecovered);\n    const modifiedDeathsData = [...data.Countries].sort((a, b) => b.TotalDeaths - a.TotalDeaths);\n    return modifiedConfirmedData;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/khaidemsandipsingha/Documents/CoronaWorld/covid19world/src/api/fetchApi.js"],"names":["url","fetchData","data","fetch","json","modifiedData","newconfirmed","Global","NewConfirmed","totalconfirmed","TotalConfirmed","newdeaths","NewDeaths","totaldeaths","TotalDeaths","newrecovered","NewRecovered","totalrecovered","TotalRecovered","dateupdate","Date","country","Countries","error","console","log","fetchDataCountries","sortConfirmed","sort","a","b","sortRecovered","sortDeaths","modifiedConfirmedData","modifiedRecoveredData","modifiedDeathsData"],"mappings":"AAAA,MAAMA,GAAG,GAAG,oCAAZ;AAEA,OAAO,MAAMC,SAAS,GAAG,YAAY;AACjC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACH,GAAD,CAAZ,EAAmBI,IAAnB,EAAnB,CADA,CAEA;;AACA,UAAMC,YAAY,GAAG;AACjBC,MAAAA,YAAY,EAAEJ,IAAI,CAACK,MAAL,CAAYC,YADT;AAEjBC,MAAAA,cAAc,EAAEP,IAAI,CAACK,MAAL,CAAYG,cAFX;AAGjBC,MAAAA,SAAS,EAAET,IAAI,CAACK,MAAL,CAAYK,SAHN;AAIjBC,MAAAA,WAAW,EAAEX,IAAI,CAACK,MAAL,CAAYO,WAJR;AAKjBC,MAAAA,YAAY,EAAEb,IAAI,CAACK,MAAL,CAAYS,YALT;AAMjBC,MAAAA,cAAc,EAAEf,IAAI,CAACK,MAAL,CAAYW,cANX;AAOjBC,MAAAA,UAAU,EAAEjB,IAAI,CAACkB,IAPA;AAQjBC,MAAAA,OAAO,EAAE,CAAC,GAAGnB,IAAI,CAACoB,SAAT;AARQ,KAArB;AAUA,WAAOjB,YAAP;AACH,GAdD,CAcE,OAAOkB,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAlBM;AAoBP,OAAO,MAAMG,kBAAkB,GAAG,YAAY;AAC1C,MAAI;AACA,UAAMxB,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACH,GAAD,CAAZ,EAAmBI,IAAnB,EAAnB,CADA,CAEA;;AACA,UAAMC,YAAY,GAAG;AACjBsB,MAAAA,aAAa,EAAE,CAAC,GAAGzB,IAAI,CAACoB,SAAT,EAAoBM,IAApB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACpB,cAAF,GAAmBmB,CAAC,CAACnB,cAAxD,CADE;AAEjBqB,MAAAA,aAAa,EAAE,CAAC,GAAG7B,IAAI,CAACoB,SAAT,EAAoBM,IAApB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACZ,cAAF,GAAmBW,CAAC,CAACX,cAAxD,CAFE;AAGjBc,MAAAA,UAAU,EAAE,CAAC,GAAG9B,IAAI,CAACoB,SAAT,EAAoBM,IAApB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAChB,WAAF,GAAgBe,CAAC,CAACf,WAArD;AAHK,KAArB;AAKAU,IAAAA,OAAO,CAACC,GAAR,CAAYpB,YAAZ;AACA,UAAM4B,qBAAqB,GAAG,CAAC,GAAG/B,IAAI,CAACoB,SAAT,EAAoBM,IAApB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACpB,cAAF,GAAmBmB,CAAC,CAACnB,cAAxD,CAA9B;AACA,UAAMwB,qBAAqB,GAAG,CAAC,GAAGhC,IAAI,CAACoB,SAAT,EAAoBM,IAApB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACZ,cAAF,GAAmBW,CAAC,CAACX,cAAxD,CAA9B;AACA,UAAMiB,kBAAkB,GAAG,CAAC,GAAGjC,IAAI,CAACoB,SAAT,EAAoBM,IAApB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAChB,WAAF,GAAgBe,CAAC,CAACf,WAArD,CAA3B;AACA,WAAOmB,qBAAP;AACH,GAbD,CAaE,OAAOV,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAjBM","sourcesContent":["const url = 'https://api.covid19api.com/summary'\n\nexport const fetchData = async () => {\n    try {\n        const data = await (await fetch(url)).json()\n        // console.log(data)\n        const modifiedData = {\n            newconfirmed: data.Global.NewConfirmed,\n            totalconfirmed: data.Global.TotalConfirmed,\n            newdeaths: data.Global.NewDeaths,\n            totaldeaths: data.Global.TotalDeaths,\n            newrecovered: data.Global.NewRecovered,\n            totalrecovered: data.Global.TotalRecovered,\n            dateupdate: data.Date,\n            country: [...data.Countries]\n        }\n        return modifiedData\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const fetchDataCountries = async () => {\n    try {\n        const data = await (await fetch(url)).json()\n        // console.log(data)\n        const modifiedData = {\n            sortConfirmed: [...data.Countries].sort((a, b) => b.TotalConfirmed - a.TotalConfirmed),\n            sortRecovered: [...data.Countries].sort((a, b) => b.TotalRecovered - a.TotalRecovered),\n            sortDeaths: [...data.Countries].sort((a, b) => b.TotalDeaths - a.TotalDeaths)\n        }\n        console.log(modifiedData)\n        const modifiedConfirmedData = [...data.Countries].sort((a, b) => b.TotalConfirmed - a.TotalConfirmed)\n        const modifiedRecoveredData = [...data.Countries].sort((a, b) => b.TotalRecovered - a.TotalRecovered)\n        const modifiedDeathsData = [...data.Countries].sort((a, b) => b.TotalDeaths - a.TotalDeaths)\n        return modifiedConfirmedData\n    } catch (error) {\n        console.log(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}